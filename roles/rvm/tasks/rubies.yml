---

- name: Detect if rubies are installed
  command: '{{ rvm_rvm }} {{ item }} do true'
  changed_when: False
  failed_when: False
  register: detect_rubies
  with_items: '{{ rvm_rubies }}'
  when: rvm_rubies

- name: Install rubies
  command: '{{ rvm_rvm }} install {{ item.item }} {{ rvm_ruby_install_flags }}'
  when: rvm_rubies and item.rc|default(0) != 0
  with_items: '{{ detect_rubies.results }}'

- name: Detect default ruby version
  command: '{{ rvm_rvm }} alias list default'
  changed_when: False
  register: detect_default_ruby_version

- name: Select default ruby
  command: '{{ rvm_rvm }} alias create default {{ rvm_default_ruby_version }}'
  when: detect_default_ruby_version.stdout|default() == '' or
        rvm_default_ruby_version not in detect_default_ruby_version.stdout

- name: Detect installed ruby patch number
  shell: >
    {{ rvm_rvm }} list strings | grep {{ item }} | tail -n 1
  with_items: '{{ rvm_rubies }}'
  changed_when: False
  register: ruby_patch
  check_mode: no # Run in normal mode when in --check mode (http://docs.ansible.com/ansible/playbooks_checkmode.html)

- name: Install bundler if not installed
  shell: >
    ls {{ rvm_install_path }}/wrappers/{{ item.stdout }}
    | if ! grep "^bundler " ; then {{ rvm_install_path }}/wrappers/{{ item.stdout }}/gem install bundler ; fi
  args:
    creates: '{{ rvm_install_path }}/wrappers/{{ item.stdout }}/bundler'
  with_items: '{{ ruby_patch.results }}'
  when: rvm_bundler_install
  register: bundler_install
  changed_when: '"Successfully installed bundler" in bundler_install.stdout'

- name: Symlink ruby related binaries on the system path
  file:
    state: 'link'
    src: '{{ rvm_install_path }}/wrappers/default/{{ item }}'
    dest: '{{ rvm_symlink_to }}/{{ item }}'
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
  when: not '--user-install' in rvm_install_flags
  with_items: '{{ rvm_symlink_binaries }}'

- name: Symlink bundler binaries on the system path
  file:
    state: 'link'
    src: '{{ rvm_install_path }}/wrappers/default/{{ item }}'
    dest: '{{ rvm_symlink_to }}/{{ item }}'
    owner: '{{ root_user }}'
    group: '{{ root_group }}'
  when: not '--user-install' in rvm_install_flags and rvm_bundler_install
  with_items: '{{ rvm_symlink_bundler_binaries }}'

- name: Detect if ruby version can be deleted
  command: '{{ rvm_rvm }} {{ rvm_delete_ruby }} do true'
  changed_when: False
  failed_when: False
  register: detect_delete_ruby
  when: rvm_delete_ruby

- name: Delete ruby version
  command: '{{ rvm_rvm }} remove {{ rvm_delete_ruby }}'
  changed_when: False
  when: rvm_delete_ruby and detect_delete_ruby.rc == 0